
----------------------------------------
define i32 @fastpow(i32 %b_0, i32 %e_0) {
%fastpow:
  %r_0 = add i32 1, 0
  br label %L3

%L3:
  %b_1 = phi i32 [ %b_0, %fastpow ], [ %b_5, %L2 ]
  %e_1 = phi i32 [ %e_0, %fastpow ], [ %e_5, %L2 ]
  %r_1 = phi i32 [ %r_0, %fastpow ], [ %r_5, %L2 ]
  %0 = icmp sgt i32 %e_1, 0
  br i1 %0, label %L4, label %L5

%L4:
  %$1_0 = srem i32 %e_1, 2
  %1 = icmp ne i32 %$1_0, 0
  br i1 %1, label %L1, label %L2

%L1:
  %r_4 = mul i32 %r_1, %b_1
  br label %L2

%L2:
  %r_5 = phi i32 [ %r_1, %L4 ], [ %r_4, %L1 ]
  %b_5 = mul i32 %b_1, %b_1
  %e_5 = sdiv i32 %e_1, 2
  br label %L3

%L5:
  ret i32 %r_1
}
=>
define i32 @fastpow(i32 %b_0, i32 %e_0) {
%fastpow:
  %r_0 = add i32 1, 0
  br label %L3

%L3:
  %b_1 = phi i32 [ %b_0, %fastpow ], [ %b_5, %L2 ]
  %e_1 = phi i32 [ %e_0, %fastpow ], [ %e_5, %L2 ]
  %r_1 = phi i32 [ %r_0, %fastpow ], [ %r_5, %L2 ]
  %0 = icmp sgt i32 %e_1, 0
  br i1 %0, label %L4, label %L5

%L4:
  %$1_0 = srem i32 %e_1, 2
  %1 = icmp ne i32 %$1_0, 0
  br i1 %1, label %L1, label %L2

%L1:
  %r_4 = mul i32 %r_1, %b_1
  br label %L2

%L2:
  %r_5 = phi i32 [ %r_1, %L4 ], [ %r_4, %L1 ]
  %b_5 = mul i32 %b_1, %b_1
  %e_5 = sdiv i32 %e_1, 2
  br label %L3

%L5:
  ret i32 %r_1
}
Transformation seems to be correct! (syntactically equal)

Summary:
  1 correct transformations
  0 incorrect transformations
  0 failed-to-prove transformations
  0 Alive2 errors
