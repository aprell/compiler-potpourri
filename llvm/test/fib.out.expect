
----------------------------------------
define i32 @fib(i32 %n_0) {
%fib:
  %t0_0 = add i32 0, 0
  %t1_0 = add i32 1, 0
  %0 = icmp slt i32 %n_0, 2
  br i1 %0, label %L1, label %L2

%L2:
  %i_2 = add i32 2, 0
  br label %L3

%L3:
  %i_3 = phi i32 [ %i_2, %L2 ], [ %i_5, %L4 ]
  %t0_3 = phi i32 [ %t0_0, %L2 ], [ %t0_5, %L4 ]
  %t1_3 = phi i32 [ %t1_0, %L2 ], [ %t1_5, %L4 ]
  %1 = icmp sle i32 %i_3, %n_0
  br i1 %1, label %L4, label %L5

%L4:
  %t2_0 = add i32 %t0_3, %t1_3
  %t0_5 = add i32 %t1_3, 0
  %t1_5 = add i32 %t2_0, 0
  %i_5 = add i32 %i_3, 1
  br label %L3

%L5:
  ret i32 %t1_3

%L1:
  ret i32 %n_0
}
=>
define i32 @fib(i32 %n_0) {
%fib:
  %t0_0 = add i32 0, 0
  %t1_0 = add i32 1, 0
  %0 = icmp slt i32 %n_0, 2
  br i1 %0, label %L1, label %L2

%L2:
  %i_2 = add i32 2, 0
  br label %L3

%L3:
  %i_3 = phi i32 [ %i_2, %L2 ], [ %i_5, %L4 ]
  %t0_3 = phi i32 [ %t0_0, %L2 ], [ %t0_5, %L4 ]
  %t1_3 = phi i32 [ %t1_0, %L2 ], [ %t1_5, %L4 ]
  %1 = icmp sle i32 %i_3, %n_0
  br i1 %1, label %L4, label %L5

%L4:
  %t2_0 = add i32 %t0_3, %t1_3
  %t0_5 = add i32 %t1_3, 0
  %t1_5 = add i32 %t2_0, 0
  %i_5 = add i32 %i_3, 1
  br label %L3

%L5:
  ret i32 %t1_3

%L1:
  ret i32 %n_0
}
Transformation seems to be correct! (syntactically equal)

Summary:
  1 correct transformations
  0 incorrect transformations
  0 failed-to-prove transformations
  0 Alive2 errors
